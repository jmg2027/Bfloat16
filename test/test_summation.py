from .commonimport import *
from test.utils import *
from test.test_class import TestOperationBase

from typing_extensions import Self

bf16_mant_max = float(bf16(0, 0, 127))
# Match vector_element_num to FloatSummation.vector_element_num
#vector_element_num = 64
vector_element_num = 32
rand_vector_num = 3


class TestSummation(TestOperationBase):
    #test_set = [
    #    [
    #1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    #1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    #1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    #1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    #1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    #1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    #1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0,
    #1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0
    #     ],
    #    [
    #bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max,
    #bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max,
    #bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max,
    #bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max,
    #bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max,
    #bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max,
    #bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max,
    #bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max, bf16_mant_max
    #     ]
    #]
    test_set = [
    #    [
    #        [
    #1.0, 1.0, 1.0, 1.0
    #     ],
    #    [
    #1.0, 2.0, 4.0, 8.0
    #     ],
    #    [
    #1.0, 2.0, 3.0, 4.0
    #     ],
    #    [
    #-1.0, -1.0, -1.0, -1.0
    #     ],
    #    [
    #-1.0, -2.0, -4.0, -8.0
    #     ],
    #    [
    #-1.0, -2.0, -3.0, -4.0
    #     ]
    #     ],
    # These are adoptable error I think...
    #FAILED SUM([458.0, -1184.0, 0.0036163330078125, -0.0035858154296875]), bf16: Bfloat16(-724.0, sign = 1, exponent=9, mantissa=53), tfbf16: -728
    #FAILED SUM([-0.00173187255859375, 744.0, -744.0, 0.00811767578125]), bf16: Bfloat16(0.006378173828125, sign = 0, exponent=-8, mantissa=81), tfbf16: 0.00640869
    #FAILED SUM([-308.0, 0.00628662109375, -0.006256103515625, 1528.0]), bf16: Bfloat16(1224.0, sign = 0, exponent=10, mantissa=25), tfbf16: 1216
    #FAILED SUM([-44.0, 0.0027923583984375, 1776.0, -0.00274658203125]), bf16: Bfloat16(1736.0, sign = 0, exponent=10, mantissa=89), tfbf16: 1728
    #[[458.0, -1184.0, 0.0036163330078125, -0.0035858154296875],
    #[-0.00173187255859375, 744.0, -744.0, 0.00811767578125],
    #[-308.0, 0.00628662109375, -0.006256103515625, 1528.0],
    #[-44.0, 0.0027923583984375, 1776.0, -0.00274658203125],]

    # It fails...
    #[-0.00173187255859375, 744.0, -744.0, 0.00811767578125],
    # It passes
    #[-0.00173187255859375, 0, 0, 0.00811767578125],
    # It seems tf.reduce_sum works different way from summation unit
    #[-0.00173187255859375, 100000, -100000, 0.00811767578125],
    #[-0.00173187255859375, 10000, -10000, 0.00811767578125],
    # This is special case for larger align bit
    #[-0.00173187255859375, 1000000000000000, -1000000000000000, 0.00811767578125],
    #[0, 0, 0, 0],
    #[-10, 10, -100, 100],
    #[0, 0, 0, float(bf16(0, -126, 0))],
    ## Special cases
    #['nan', 1.0, 2.0, 3.0],
    #['inf', 1.0, 2.0, 3.0],
    #['-inf', 1.0, 2.0, 3.0],
    #['inf', '-inf', 2.0, 3.0],
    #['inf', 1.0, 'inf', 3.0],
    #['-inf', 1.0, 2.0, '-inf'],
    #FAILED SUM([1.2864312886424686e-20, 7.551635855174848e+19, 1.169720636290726e+38, 2.7249173913590775e+38]), bf16: Bfloat16(nan, sign = 0, exponent=128, mantissa=18), tfbf16: inf
    #[1.2864312886424686e-20, 7.551635855174848e+19, 1.169720636290726e+38, 2.7249173913590775e+38],
    #[float(bf16(0,bf16.exp_max, bf16.mant_max)), float(bf16(0,bf16.exp_max, bf16.mant_max)), float(bf16(0,bf16.exp_max, bf16.mant_max)), float(bf16(0,bf16.exp_max, bf16.mant_max))],
    #[float(bf16(0,bf16.exp_max, 0)), float(bf16(0,bf16.exp_max, 0)), float(bf16(0,bf16.exp_max, 0)), float(bf16(0,bf16.exp_max, 0))],
    #[float(bf16(0,bf16.exp_max-1, bf16.mant_max)), float(bf16(0,bf16.exp_max-1, bf16.mant_max)), float(bf16(0,bf16.exp_max-1, bf16.mant_max)), float(bf16(0,bf16.exp_max-1, bf16.mant_max))],
    #[float(bf16(0,bf16.exp_max-1, bf16.mant_max))] * vector_element_num,
    # Simple + cause wrong result:
    # tf_vector_sum: 6.64614e+35
    # bfloat16: 1.2773050271995676e+36
    # python float: 1.2773861911840086e+36
    # tf_reduce_sum: 1.2773050271995676e+36 (PASS)
    #FAILED SUM([-2.4441935897665156e+20, 6.742775440216064e-07, -5.7931972727168054e-30, -2.1281525885478956e-32, 23776938950656.0, 3.3034284942917713e-20, 2.633107345841924e-35, -1.3658406274475593e-20, -2.6893296075324036e-20, 578813952.0, 14499809591296.0, -0.0458984375, -1.025638970498251e+22, -7.552869850948055e-26, 8.851494298807439e-20, 1.5795024613113804e+20, -16710107136.0, -7.34398467671166e+37, -0.00013446807861328125, 7.691059161069047e-19, -4.9611955367415196e-31, 5.662441253662109e-07, -6.810088283353266e-31, -2.9907629905160607e+37, 614180323328.0, 4.21614504913028e+36, -1.4653669987499396e-19, 54150947667968.0, 5.760204327437074e+33, -6.422418416702717e+24, -102804337197056.0, -4.579669976578771e-16, 106954752.0, 4.85722573273506e-17, -1032.0, 6.72084247699335e-25, -243712.0, 2.8719891998770765e+34, 6.273337765602162e-21, 2.55351295663786e-14, 1.1994118882018901e-22, -4.551514126383897e-35, 1.2048817095928447e-37, -3.893774191965349e-12, 0.0, 1.3624586956795388e+38, -7.229752424169529e-26, 6.938893903907228e-15, -4.188347653454561e+17, 3.4352836090169303e+28, -1.5784582449945876e+37, 2.244637310223896e-20, -4.4668785331246925e-37, 1.8821590109849165e-25, 76021760.0, -6.55527478390022e+34, -3.848728683538761e+23, 288072046477312.0, -2.0021496686510295e+37, 2576980377600.0, -0.0015106201171875, 374784.0, -3.8496412174785376e-28, 7559142440960.0]), bf16: Bfloat16(1.2773050271995676e+36, sign = 0, exponent=119, mantissa=118), tfbf16: 6.64614e+35
    #[-2.4441935897665156e+20, 6.742775440216064e-07, -5.7931972727168054e-30, -2.1281525885478956e-32, 23776938950656.0, 3.3034284942917713e-20, 2.633107345841924e-35, -1.3658406274475593e-20, -2.6893296075324036e-20, 578813952.0, 14499809591296.0, -0.0458984375, -1.025638970498251e+22, -7.552869850948055e-26, 8.851494298807439e-20, 1.5795024613113804e+20, -16710107136.0, -7.34398467671166e+37, -0.00013446807861328125, 7.691059161069047e-19, -4.9611955367415196e-31, 5.662441253662109e-07, -6.810088283353266e-31, -2.9907629905160607e+37, 614180323328.0, 4.21614504913028e+36, -1.4653669987499396e-19, 54150947667968.0, 5.760204327437074e+33, -6.422418416702717e+24, -102804337197056.0, -4.579669976578771e-16, 106954752.0, 4.85722573273506e-17, -1032.0, 6.72084247699335e-25, -243712.0, 2.8719891998770765e+34, 6.273337765602162e-21, 2.55351295663786e-14, 1.1994118882018901e-22, -4.551514126383897e-35, 1.2048817095928447e-37, -3.893774191965349e-12, 0.0, 1.3624586956795388e+38, -7.229752424169529e-26, 6.938893903907228e-15, -4.188347653454561e+17, 3.4352836090169303e+28, -1.5784582449945876e+37, 2.244637310223896e-20, -4.4668785331246925e-37, 1.8821590109849165e-25, 76021760.0, -6.55527478390022e+34, -3.848728683538761e+23, 288072046477312.0, -2.0021496686510295e+37, 2576980377600.0, -0.0015106201171875, 374784.0, -3.8496412174785376e-28, 7559142440960.0],

    #        self.input_vector = [
    #            bf16.Bfloat16.float_to_bf16(1.0),
    #            bf16.Bfloat16.float_to_bf16(-1.2),
    #            bf16.Bfloat16.float_to_bf16(4.0),
    #            bf16.Bfloat16.float_to_bf16(5.0),
    #            bf16.Bfloat16.float_to_bf16(-10.0),
    #            bf16.Bfloat16.float_to_bf16(-20.0),
    #            bf16.Bfloat16.float_to_bf16(30.0),
    #            bf16.Bfloat16.float_to_bf16(-100.0)
    #            ]
    #        self.weight_vector = [
    #            bf16.Bfloat16.float_to_bf16(2.0),
    #            bf16.Bfloat16.float_to_bf16(-4.2),
    #            bf16.Bfloat16.float_to_bf16(7.0),
    #            bf16.Bfloat16.float_to_bf16(-9.0),
    #            bf16.Bfloat16.float_to_bf16(10.0),
    #            bf16.Bfloat16.float_to_bf16(-20.0),
    #            bf16.Bfloat16.float_to_bf16(30.567),
    #            bf16.Bfloat16.float_to_bf16(-400.6)
    #[['inf', 0, 0, 0], 
    #['inf', 0, 0, 0], 
    #['inf', 0, 0, 0], 
    #['inf', 0, 0, 0]], 
    #[['-inf', 0, 0, 0], 
    #['-inf', 0, 0, 0], 
    #['-inf', 0, 0, 0], 
    #['-inf', 0, 0, 0]], 
    #[['inf', 0, 0, 0], 
    #['-inf', 0, 0, 0], 
    #['inf', 0, 0, 0], 
    #['-inf', 0, 0, 0]], 
    #[[1.0633823332454027e+37 for i in range(32)],
    # [-1.0633823332454027e+37 for i in range(32)]],
[[-5.582367593898967e+17, 7.723226296032213e-16, 1.0928872380450662e-16, -1.0660899877548218, -8.104018862196043e-31, 103.07935333251953, -1.0758920513540007e-16, -6.116662250175176e+25, 1.3830114675960617e-15, 7.75002408772707e-05, -6030.85791015625, -1301787967488.0, 1.02599074059608e+35, 7.913096176578871e-13, -1.7740106644440263e-27, 9959428.0, 1.319648167080345e+34, -0.8094426393508911, -194105212928.0, 0.005548552144318819, -4731971628433408.0, 6.207218904892848e+33, -3.3352395041770976e-26, -5.694122986538271e+17, -952396.125, -1.6062235366702646e+35, -8.921553005483323e+32, 9.240842039669555e+16, -13210321.0, 7.6954683646062e-17, 1.8856800356057507e-37, -4.876605488836605e-25], [1.6378615117643776e+16, 1.2156794292970455e+19, 387577.65625, 1.1105259389104083e-36, -2.0591911693585568e-13, -7.880161963518135e+31, 2.3938337578617142e-23, 4.822037905952853e+34, 7572636160.0, 3.3866967866834514e+21, -4.036015618935629e-11, 2.1159573462254318e-23, -5.329827035893686e-05, -0.08732385188341141, 1.6761406838394234e-18, 7.317065199255552e+16, 2.8236703656148165e-05, -6.082098646592276e-23, 6.023309485279139e+21, 9.488235685233595e-35, -16.515729904174805, 3.6282979408300014e-25, 5.237016832770048e+16, 1.3873418967812577e+32, 1.881919176289309e+20, 7.575106337753823e-07, -1.1155884550673768e-31, -1.01707495722234e-22, 2.5535696234729036e-19, 1.1157608507668376e+33, -2.030196974076026e-12, 9.645925724832694e-11], [-2.560826756756219e-37, 2.517200217427116e-30, -2.3393959054374136e-06, -7.212340151332595e-36, 4.8533348316896835e-26, 1.1169232246445275e-14, 5.899610476185735e-37, 3.275574676089151e-17, -3.4926232045373595e-11, -2550301440.0, 7.771227473959605e-28, -1.2972541712360426e+31, 19447.84375, -3.7434076044732566e-31, -2.6588579657982336e-06, 171.9589385986328, -4.6127346244911065e-29, -3.168678861452368e+34, 1.2423495565627718e-09, -292895072.0, -2.256598818917155e-08, 2.987577685242826e-10, -21102239744.0, 9.250849803433285e+35, 4.3386454292157316e+26, 6.857406132600685e-25, -3.865421517070869e-27, -432.21197509765625, 8.187257356183142e+16, -6.720813686708806e+26, 2.6783172901723162e-11, -1.242448441111799e-16]], 
[[-3.315005976381049e-31, 4.1291333173057936e-38, 1.1039741399144883e-36, 1074799104.0, -766463770624.0, -3.4583731714536655e+34, 7.351159041929416e-28, 3.0120875560629463e+28, -2.991494053086594e-17, -1.453026556356289e-37, 7.405826639432674e-16, -1.9363903902558377e-07, 1.731619802666702e-36, -1.7472615228637184e+16, 0.025525277480483055, -1.3312906104983509e-31, -6.766348707171929e-24, 2.67745188281144e-28, -457533882368.0, -1.0073878514005677e+31, 9.196537472657858e+30, -1.3079561114963174e+29, 1.042778952642319e-17, 27.651063919067383, -2.9271024142200656e+33, -4.912153935774561e+23, -4.627917497605423e-30, 2.508732295340241e-24, -3.712029430350938e-28, -8.738592082512524e+19, -2.697951517852197e-18, 6637422.5], [1.7880505765788257e-05, -9.899888198207779e+33, -978028480.0, 7.096068127554745e+27, -1.708514008742005e+26, 3.776352883939885e-23, 6.19377028629194e-27, -4.822591614313016e-16, -6.286736488342285, -1.5100223208719399e-05, -3.564319793835826e+34, 7.136496945872742e-37, -6.501773823720822e+22, -0.06770069897174835, 1.6486522454757257e-28, -5.348885939206183e-13, 1.8563739878925004e-23, 1.271410346031189, 4.192864536918365e+33, 5.466660890471627e+33, 1.9922344085419775e-30, -6.775858155936521e+30, -298311.625, -6.135423097157504e+19, 3.5276844439012225e+34, 0.014846988953649998, -5.827381886432919e+34, 6.213005110389247e-10, -8.532270213666991e-36, -1.0866330144858212e+25, -1.4090016640051315e+35, 2874385.5], [-3.41703465522869e-09, 106.70460510253906, -1.5105268845017814e+34, 1.9676811111191974e-18, 3.6109723815554773e-37, -2.3453647981036465e+23, 11.090096473693848, 3.1831665912306654e-22, -1.4586385236334806e-22, 173904752.0, 5.042339331397145e-22, -1.2193377187941223e-05, -1.720922064690348e+19, -53945788.0, 2.4136294534985286e+19, -9.409598119857728e-31, -3.237384938137633e-22, 3.909874085789696e+16, 1.2124459219233778e+36, 38681722880.0, 1.38744089404483e-16, 5763205.5, 3.215701815234635e-33, 9.539242310004716e-22, 1.2995940335836075e+21, 1.1094851137376803e+33, 2.4688181865009437e-30, 3.9507224469034864e-28, -1.5795949975843635e+17, -1.9640879364733044e+34, 58047.7578125, -1.7704168554925916e+18]], 
[[8.571126895851078e+18, -3.567649199237991e+30, -2.764042463483068e-27, -64582615040.0, -2.1526352786701584e+22, 2.0364347589042168e-16, -4.251678352278556e+23, 3.0815503004508495e-21, -5.977612818242051e-05, 1.523344235465629e-05, -1.5276919559785131e-19, 32552213544960.0, -1.808491273402879e-10, 1.1041836797112334e-14, 136633.046875, 2.797529935836792, -9.216491639558671e+31, -5.6130138684825074e+29, -1.6640349542740296e-07, 2.3401558753381315e-26, 2.527228841202708e+26, -6.427436013211091e+18, -935829.625, -1.35288240694339e-20, 2.7437220767881954e-25, 7.588502204998823e-25, -2.240472025705773e-15, 2.6301024638593464e+21, -1.2298816898172447e+26, 4.421661378225921e-38, 1.5823443479370842e-31, 2.714567292695347e+16], [-4.785538925202734e+22, -3.673668156407527e-38, -5.6226497235911665e-08, 1.4858488460523152e+23, -1.9536191331326336e-08, 2.4428676839551295e+34, -2.539641220418765e+16, -1.2871159540916246e-28, 2.4291833351683926e-27, 2.69949509856815e-07, -9.491759556112811e-08, -3.9763922041672517e-28, 4.1306938197775114e-24, -1.4886398124533666e+36, 0.0002874504425562918, 2.00297225791414e-29, 1.4993367078245928e-33, 0.043383415788412094, 1.712596526848248e+25, -1.433964999752651e+28, 4.7057851753166065e-17, 2.2286474625827447e-29, 2.497416495862516e-22, -34944.234375, -1.324123573949825e+18, 894966956032.0, -41.75566482543945, 9.107200599436377e-30, 0.005842611193656921, 3272188624896.0, -7.40614867236286e-32, -2.5112821843533084e+26], [-1.1580997894950024e-33, 6.598842715341019e-37, 2.1492946349756834e-29, -7.982555399616405e+23, 3.543617598764853e+33, 4.6361040162243384e+33, -1.5161163127276218e+26, -2.3603114394342386e-35, 5.352944310033081e-09, -2.188470960007294e-09, 1.5047154633407445e-09, 1.1191599885252873e+20, 3.302460493779937e-37, -249617940480.0, 3.4821971781067056e-36, -359.92755126953125, 4.4293169736416703e+20, -4.1870283176171707e-22, -118.48193359375, 1132727696883712.0, -1.2080238059925927e-32, -0.01758623495697975, 4.931852356536104e-21, -41076668.0, -889140150272.0, 0.7343984246253967, -0.0021350467577576637, -2.130976860949526e-36, -2.1017503414519595e+19, -1.1319806703886876e-37, -2.198875732092184e+30, -0.1797284334897995]], 
[[-1000271680.0, 1.2111929333157252e+29, -5.895584041902806e-28, -2.8391462166479887e+22, -4.0829500039741477e-16, -1.9853909267639485e-24, 4.971338631374761e-23, -8.287261576002272e-35, 2.6910525306469152e+26, 44487.92578125, -1.7544384556496113e+21, -0.93804532289505, -5.111035378297111e+29, 9.939915751438032e+31, -4.3306582820680506e-13, 6.930690618323902e-30, 5.035919681262158e-09, -7.240530158691372e+28, -2.1778430447927377e-10, 1.2865428372272697e-36, 13185464.0, 20631914496.0, -0.035545527935028076, 1.8278873389976501e+28, 477846896640.0, -1.424499082060271e-12, 4.3175895776602365e+26, -1.4513677354871967e+35, 9.610322920244201e+31, 0.0004300522559788078, 6.3867746575851925e-06, 4.610947361502715e-28], [4.3932094142062697e-38, 9.303451082261006e+24, 1.4502687516714254e+24, 1.2673118007982778e+35, 1.0367659296551023e+21, -56564.3828125, -6.713216077878051e+28, -8.25269742619969e-18, 4.248189508642199e+29, -1.4258573488579174e-10, 7.640162946742635e-10, -1.973503316321512e-08, -0.020626993849873543, -6.751959601748378e+16, 6.790328544650126e+27, -3.601832266253101e+28, -3.759370486022817e-07, -1.869051371807121e+20, -0.0009049367508850992, 1.2561627356789257e-14, 7.036342708488519e-08, 7.658709628658218e-31, -3.858231830443467e+21, 2.316296178333329e+36, 2430690838708224.0, 3.115157298783089e-10, -6.305037021636963, 5.716539995980058e-17, 4078.651611328125, 1.361812434497534e+27, -5.470711512487124e+30, -9.007708350104813e-15], [-1.1207990218182731e+24, 2.69695413425443e+34, 1.1391407756201165e+18, -20101031936.0, 1.0327347132083732e+18, 1.1196216917386093e+35, -6.055576504647442e-13, -956868784553984.0, -4.999395428889608e-12, 1.0664288937785637e+36, 20233180.0, 42.2021484375, 1774.530517578125, 1.7427706212522794e-30, -3.262471326626392e+25, 4.722112862509675e-06, -3.786851042241237e-17, 5429297152.0, 6.630352800129913e-08, -6.744150141457794e-06, -0.012030481360852718, -1.3393641931845648e+29, 3.789376928181277e-25, 450601.53125, -24240.40625, -1.350093807716515e-36, -449044864.0, -2.846578038306213e-34, -1.7837271434201988e-21, -5.996100762730496e+17, 1.0723399638046235e+29, 0.4086826741695404]], 
[[9.205766362171913e-38, -1.7146584622633812e-31, -6.688597540973408e-26, -1.7881180103664992e-19, 80358014976.0, -1.3761671198153635e-06, -1.440071846029136e+28, 1.368820763457958e-28, -79332784.0, 1.4358470855991754e-37, -4.1446262235462e-22, 0.12794281542301178, -63.63038635253906, -4153.0185546875, 323616289849344.0, 1.1073441391486676e+36, 175.787841796875, -1.5108876846958488e-33, -4.00963443640139e-24, 1370.4273681640625, -6.067210126428655e+26, -6.073584154364653e-05, 2512396222464.0, -0.10933192819356918, 1.5635158558384777e-19, -1051330.0, 2.7547987454718705e-33, -6.137990732870619e-28, -1.1606340289198817e+18, -9.46703010895853e-23, 5.797450735624265e-13, -6.845093793792823e-19], [-43154784.0, -1691746949922816.0, -5.53577105111385e+24, 2.5114223110270445e-24, 2.03143302935068e-16, -2.2847722325192166e-10, 159560640.0, -27098359808.0, 2.457309911108041e-10, 2.542304310249489e-34, 129460.8515625, -1.5995689434335702e-25, -0.17151294648647308, -3.15422753020822e-12, 1.7741660516048427e+24, -1.988831704103327e+22, -944883476987904.0, 2.413012960820055e-35, 1.644247071830307e-09, 1.824371824250998e-35, 281707184128.0, -5.746607101432134e-28, -2.9382197166207866e+26, 3.2256175472866744e-06, -9.207037168422901e-32, 2.4251227104921776e-30, -1.426400557882409e+17, -1.6681952629301019e-37, 7.505104490452087e-30, 2106130563072.0, -6.666269779205322, 2.357807487234306e-36], [-1.5867132470397327e-23, -0.8058980703353882, -16025346113536.0, -2.781043662157311e+31, -7.420400876476883e-25, -8.098236252836042e-32, 3.4311312901991187e-08, -3.571749450023698e-12, 8.169616570122699e-38, -442.9183349609375, 1.1849428358515417e+34, 100844032.0, 1.2900255527551076e-28, -4267.748046875, -3.811385929086697e-10, -1.7724129283696022e-25, 0.012982796877622604, -2.019999354978304e+16, 1137.94384765625, -9.531716981804237e+16, -0.5748491287231445, -2580019412992.0, -2.9759443350485526e-05, -5.276500358545403e+20, 7.012599945177556e-10, -1.9574690088327748e-33, 2.0930887996996413e-35, 6.781186946968951e+19, 1.452211363378738e-31, 6.580144285055582e-28, 7.708326168615179e-20, -2.3158334083854934e-29]], 
[[-6.170506682670847e-24, -6.060051236916184e-28, 4.4081893373893753e-35, -1330749636608.0, 1.339592933108369e-12, 0.013930769637227058, -6.612300869335546e-15, 0.08474470674991608, -2.524178723366786e-15, -9.696451596525471e-33, 3.3858240358848566e+31, 3.9168646150787686e+24, 7.403233841934975e-13, -1.2529139507670286e+19, -1.5324597563857158e+31, -7.139529771137892e+18, -1.716279649886865e+25, 1.3794942537282425e-25, 557365254422528.0, 2.1766336563006083e-12, -1.288121412600044e+20, 4.324190597079368e+17, -1.6162599312786644e+32, -2.3921866754561806e-25, 1.7495123927346867e-07, 1.0687894932146294e-13, 12571470848.0, 1.8567373693416112e+20, -3.7586479399586553e-37, -4.377105317827299e-35, 1.1312269262821853e-30, -1.4312472535202897e-22], [-8.633286086023872e-09, 6.417699134059693e+20, 4.744862345284326e-23, -4.361763785709627e-07, 1.768891080551918e-22, -7.653477495785908e+28, -0.02069798670709133, -5.788043833282606e+19, 8.807429785484544e-11, -4.102534729203647e-16, 2.279566694848182e+30, 3.1644700748678645e-10, -2.496668075930534e-18, -3.178856344820957e-10, -5.197002172054607e-32, -8.051373243670172e-25, 0.00872968602925539, 9195244.0, 2.586634309594199e+19, -4.6132419129207847e-07, -8.747608667931578e-36, -4.7453440347532736e-32, -1.4171406030654907, 1253948032.0, -9.371723643232453e+18, -5.151702724907394e+35, -6.262192224274273e+31, 0.008201655931770802, -2.1228613946012568e-32, -1.4168852813037166e-17, -1.399659746227163e+29, 10423.12109375], [4.1405759869912094e-20, 1.792471086642334e-30, -4.010009895140777e+27, -337.0533142089844, 1.093840637622634e-06, 8.157650128953002e+22, 7.200649510608303e-38, -5.550732651293799e-10, 0.05883394926786423, 3.9136939761249006e-29, -9.47473637324947e-08, 7.901226435769953e-38, -7.852332592010498, 0.0006193503504619002, -16260568.0, -8.512455180607372e+26, 2.1217206596183883e-30, -0.0001518904318800196, 219.49168395996094, 2.2297595248362534e+34, 3.432259276792138e-08, -2.0532695735078587e-29, 9.206839031798249e+27, -912640114688.0, -1.0203880352017936e+32, -4.988906281136334e+35, -1949.7425537109375, 694773.3125, 2.081339447577256e-22, 8.771971046639703e-35, -642913.125, -7.930719879607251e+33]], 
[[9.458334809808733e-11, -2473348722327552.0, -4.9234461225822354e-32, -3.1237365584008783e+22, -0.0001175705183413811, -2.8478827135363277e+24, 9237468557606912.0, -5336469.0, 2.809899188920337e-16, 0.8794296383857727, 585951870976.0, 3.722028341012994e+21, -4.374373585953332e+19, 3610285568.0, 0.020262261852622032, -1.0768455391667814e+17, 2.1404483128985125e+22, 3.3529158182526997e-13, -4.727847548679186e-14, 3.3011309767132086e-27, -0.0013116651680320501, -1004247709646848.0, 8.360955157382666e-13, 9.775038167274996e-24, 4.555664332080357e-26, 1.1534730319117457e-25, -4.316443380840138e-35, -304050130124800.0, -1.7406154342551018e-23, 510233.4375, -1.7667358668622428e-33, 7.083165570859133e+25], [-1.0749853716510147e+18, 1208131216474112.0, 1.601400638026372e-22, 5.082655995797385e+30, -1.772618532569575e+28, -9.102997641284813e+16, -9.771455161043482e-24, 3.910615618394213e+22, -2.254656897288852e+22, 56167227392.0, 4.077066421508789, -1.711135213657089e-34, 0.00014596519758924842, 2.1035237964190716e-27, 4.726528308102684e-31, 1.7119045407266743e-17, -165978.515625, -3.2829097496537394e-32, 1.9330874017987953e+18, -2.4631566295491913e-30, 144720533651456.0, -7.749257100808996e-14, 3.111178849268814e-12, -1.486455259897959e-36, 1.5586530820208407e+20, -9.198982669927449e+18, 1346.585205078125, 5.281752980688871e+35, 1.2108538821105943e-32, -3.6563690184423506e+18, -587114580279296.0, 2.0590995022840308e-22], [6.133845387522458e-20, 2.3971644863757384e-23, 1.1425230894701599e-07, 1.2994536613919694e-37, -3.3956081143281617e+31, 9.196666329944587e-38, -45385482240.0, 1.4546453051135958e+27, -5.9271024421568274e-30, 3.269105255159343e-18, -2902387064832.0, -8.500353531394392e+18, -10547159367680.0, 0.0006149808177724481, 4.11735836397531e-12, 749993.375, -254755.21875, 1.3375100032087309e+29, 2.3425529756762977e+20, -6.27950556136847e-12, -7.102528956363045e+34, -1.965966278660858e-09, 2.6981246264767833e-05, 1.6532447457987386e-29, -728401.5625, -676133994496.0, -2.1696047805249112e-33, 2.7344514761491138e-15, -4.168116685132617e-10, 7.295141420239146e-37, 2.777469262582599e-06, 3.6832755512250515e-08]], 
[[-0.000289117859210819, 0.03927098587155342, 4.009713174580492e-25, -4.3607354733169116e+32, -8.466860070750126e+17, 3.7264251490342007e+22, 1.2138159945607185e-05, -2.536313444424093e-13, -1.483054971771787e+32, -1.925319809780854e-26, 1.3826653650135268e-36, -2.3402765468021503e+21, 8.883594263255587e-23, 5.300424211600934e+22, -109385023488.0, -2.987124714248779e-10, 11.166136741638184, 17025.376953125, -4.3074876884929836e-05, -9.953212572977419e-29, -56405960687616.0, -541530179764224.0, 4.457540645478308e+19, -1.7667847638748152e-20, 6.700763126874301e-14, 102865928.0, -6.345814094157015e-31, 1.5113681538901586e+36, -4.473728719654643e+35, 2.7343375563759764e-08, 9.84783050124541e-29, 1.3614414771326994e-14], [4.747712309226922e+26, -1.4140545346324023e-30, -6.296166419482542e+18, -7.379250205677423e-13, 1.328208185285898e+26, 0.017288263887166977, 1.0916131603820629e+27, 49064516.0, 6.888554357789625e+27, -2.828027706247818e-29, 1.8018449385556076e+31, -8.740383263026253e-20, 1.932693969055864e+25, 2010538180608.0, 3.231046886206096e-13, 9.875817830044058e-23, -9.202951468665432e-27, -6.743400282616108e-10, -1.4157615729851756e-15, -7.551654374065291e-23, 205817184.0, -0.0010959802893921733, -9.216016974116136e+24, -27189844115456.0, 7.269820054105203e-13, 3.2043999513302574e-32, -1.083320856990546e-35, -2.5696003837441813e-20, 1388639.5, -11066662.0, -5.042496527709729e-25, -2.234173534671077e+26], [-8.60881729566853e-28, -7.21146742321821e-09, -1.1603852076523902e-32, -2.619769929879112e-06, 2.5369261812818733e-12, -5.15072305553449e-13, -4.649682949775524e-08, -2.5075050113279013e+29, -1.4198075405147392e-05, -4.467465009039273e-10, -11759473664.0, 2581287927808.0, -0.9131821393966675, 2.4211308362187364e+24, 936612.875, 101874606080.0, -10221.80078125, 1.1598856666343288e-31, 2.4910258538112526e-15, 1.1439317374510935e-20, -1.6634850441565874e-10, 2370562304.0, 1.2271034599123283e-25, -6820030464.0, -3.043901834097434e+35, 6.176568486543094e-16, -7.202837451641979e+17, -7.918838202098187e-25, 1.1789029788894035e-20, -3.3802371554187724e-32, -6.629022121429443, -2.6225499356064337e-23]], 
[[1.2527537053371684e-17, 18.866470336914062, -1.7100225487496e+21, 1728536379392.0, -1.0876965557507834e+24, 1.2176324294108333e-22, 6590261169750016.0, 5661955.5, 2.619844224706141e+26, -2.0366538820299067e+36, 5.4082296769144166e-36, 1905389568.0, 1.1220837979676004e-23, 7.654676449006515e-18, -5.553089431487024e-05, 1.2261313868306842e+20, 2179.58251953125, 8.629032217476683e-29, -2.1887866681873785e-14, -6.273759822761349e-07, -5.340613464289578e+34, 7.433573889198007e+27, -4.193125031477248e+17, -17928941568.0, -1.857391965660825e-34, 1.3327996322723056e-37, 1762073.5, -8.305410802459876e-14, 7.721668818077858e-21, 253511.34375, -1.7809373071677146e-20, 3.870829607636062e-15], [-5.733929356210865e-05, 3.610967947350292e-31, 6.90194844965929e+16, 1.1625541241143296e+16, -3.9389768681625926e+21, -1.0244696589110093e+33, -7.492690926964786e-16, 5.415354909662714e-38, 3.3313878999158275e-13, 4.306827038812662e+28, -0.0017977443058043718, 1.1854048428191635e+21, 4.614943666137319e-28, -4.75751775752542e-08, -0.000297034828690812, 4.0518728974291733e-32, 1.44882800201529e-10, -1.0654260801201766e+17, 1129481.375, -4.801315285511398e-35, -9.902392274219185e-12, 5.29903052124424e+29, 2.428785449330533e-16, -4.9574130275870753e-23, 1.0765677412039043e-11, -8.034502659284769e+19, -3.1699916721052293e+35, -2.6561696131466306e-07, -1297.941650390625, -4.425113899686305e-28, -602318.0, 2.2364307170068928e+21], [4.525229705357526e-33, 9.040421066054492e+27, -4.5355457597324966e-27, -6.026025187739928e+26, 7.43705476983468e-32, 1.8382286093506067e-23, 1.8695548060114614e-21, -5.468450688725649e-34, 3.036471705981956e-28, -135.37062072753906, 0.14074119925498962, -2.3180011683906358e+36, 0.3534668982028961, 5.832785766793462e+25, 2.260973928798471e-16, 8.818925339511741e-23, 7.349454335781047e-06, -8.712751878192648e-05, -0.00048798471107147634, -1.770144142582097e+25, 7.161815570060403e+26, -1.800455111868076e+24, -2.4157972506238517e+19, -0.0025924653746187687, -2.217341611194882e+28, -3.4048476724895724e-33, 8.387186944958103e-09, -1.6601314507119769e-12, -445344957595648.0, 1.0073558265792923e-32, -6.948954605697148e+27, -27.249038696289062]], 
[[-6450590.0, 2.3729518214319915e+27, -3.016032666228198e-35, 2.0641456539993228e+21, -3.5911740248195656e-10, -982.243408203125, -1.1819647744010617e+19, -1.4070202462143482e-36, 1.3915752502798497e-19, -1.9470637832438235e-16, 12.461697578430176, 1.0674204388467794e-22, 342.70257568359375, 0.00020563391444738954, 9.160572919627292e-22, -8.980094340383663e+21, 3.6361893762659747e-07, -497485.59375, -1.0329929781818163e+17, 4.9287481898516193e-32, -6.070409441176428e+28, 3.91904191640011e-35, 4.009307702225328e-17, 3.6886158658689113e-34, -3.147961163950588e+19, 4.440495467861183e-05, 8.061820030030401e-24, 3.406480511126733e+16, 60.55160140991211, -427889237426176.0, -5.48559399378949e+30, -5.4411160936534305e-27], [-0.0002566973853390664, 1.0575104248053231e+26, 4.825974608676532e-26, -0.0025385150220245123, -1.3888717495431846e-37, -8.955666816004805e+21, 3.975068346140433e+19, 2.086000132545576e-34, 216.61886596679688, 2.4211858251701866e+21, 2.8538843990868104e-28, 8.234834733396719e+21, -1848590467072.0, -8.124550490064159e+17, 1.2124337224494565e-21, -7.934155631697561e-17, 1.386669291746102e-22, 6.106097462913905e-15, 2.5166566240142394e-20, 9.250807222789734e+16, -4.5068016867055564e+21, -5.1542973556435246e+23, -1.419168961538853e-17, -1.5481373000315042e+28, -702296752128.0, 1.4882267348212653e-27, -5.018753208158033e-12, 3.1366515637070056e-19, 7531930624.0, 1.3685041887233494e-25, 1.1640218328532017e+24, 2.798655493856297e+17], [-92276596736.0, -1.6029359568099842e+21, -8.461707407126845e-20, 37504668.0, 1.1331515014693333e-32, 1.5573951017699983e-08, 9.010467256190155e-34, 1.7249373121644468e+24, 7.44175451927731e-07, -1.0262355942796968e+29, 6.289165846771029e-15, -1.4760662238341903e+35, 467952491036672.0, 8.000237219553748e+35, 2.4304326876224097e+26, 9.56441879272461, 3.4888189559545424e-10, 3806296064.0, 684024141971456.0, -2.9785368300776152e-33, -1.155293742616248e-11, -4.095870753673125e-09, -31579682816.0, 7.006630836742365e+24, 2.3054550463447106e-32, 2.1161564369404313e+23, -2.6937384801973112e-18, 4.7918920245138e-06, -6.59786377627429e+29, -5.060579188969758e-20, -73518632927232.0, -5.161870214709378e-28]],
    ]
 
    test_operation = 'summation'
    _INPUT_NUM = 32
    _TEST_SET_STRUCTURE = '[[32 elements vector], [32 elements vector], ...]'
    mod_list = {0: (fp32, fp32, fp32), 1: (bf16, bf16, fp32), 2: (bf16, fp32, fp32), 3: (bf16, bf16, bf16)}

    def __init__(self, mod, test_set = test_set) -> None:
        super().__init__(mod, test_set, self.test_operation)
        self.input_ftype = self.set_input_ftype(mod)
    
    def set_ftype(self, mod):
        ftype = self.mod_list[mod][2]
        return ftype

    def set_input_ftype(self, mod):
        ftype = self.mod_list[mod][0]
        return ftype

    # override
    def test_body(self, input: List[List[Union[int, float, bf16, fp32]]]):
        # convert to input type
        a = []
        tfa = []
        for vector in input:
            a_e = []
            tfa_e = []
            for element in vector:
                a_e.append(cast_float(element, self.input_ftype))
                tfa_e.append(conv_to_tf_dtype(element, self.ftype))
            a.append(a_e)
            tfa.append(tfa_e)
        res = self.operation(a, self.mod) 
        tfres = self.tf_operation(tfa)

        #test_res_str = f'{[[i.hex() for i in j] for j in a]}, {res.hex()}'
        #test_res_str = f'{input}'
        if check_float_equal(res, tfres):
            #test_res_str = f'PASSED({self.op}{input}), res: {res}'
            test_res_str = f'PASSED({self.op}{[[i.hex() for i in j] for j in a]}), res: {res.hex()}'
        else:
            test_res_str = f'FAILED({self.op}{input}), bf16: {res}, tffp32: {tfres}'
            #test_res_str = f'FAILED({self.op}{[[i.hex() for i in j] for j in a]}), bf16: {res.hex()}, tffp32: {tfres}'
        print(test_res_str)
        test_ret = list(i for i in input)
        test_ret.append(res)
        test_ret.append(test_res_str)
        return input, res, test_res_str

    # override
    def rand_test(self, times: int):
        vector_num = rand_vector_num
        test_list = []
        fail_list = []
        for i in range(times):
            vector_list = list()
            for j in range(vector_num):
                vector_list.append(self.rand_vector())
            v, fp32_res, test_res_str = self.test_body(vector_list)
            test_list.append([v, fp32_res])
            if check_fail_status(test_res_str):
                fail_list.append(test_res_str)
        check_fail_list(fail_list)
        return test_list

    # this method should be defined in subclasses
    def _check_test_set(self, test_set: List[List[Union[int, float, bf16, fp32]]]) -> bool:
        res = True
        # check structure
        if not isinstance(test_set, list):
            res = False
        for v in test_set:
            # check structure
            if not isinstance(v, list):
                res = False
                for e in v:
                    if not self._check_input_num:
                        res = False
        # input type check is handled in cast_float function in util
        return res   

    # override
    def test(self):
        fail_list = []
        for vector_set in self.test_set:
            _, _, test_res_str = self.test_body(vector_set)
            if check_fail_status(test_res_str):
                fail_list.append(test_res_str)
        check_fail_list(fail_list)
        return

    def rand_vector(self):
        vector = list()
        for i in range(vector_element_num):
            #vector.append(float(random_bf16()))
            vector.append(float(random_fp(self.input_ftype, -126, 120)))
        return vector
